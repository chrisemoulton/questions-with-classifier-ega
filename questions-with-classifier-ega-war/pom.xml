<!--  Copyright IBM Corp. 2015                                                 -->
<!--                                                                           -->
<!--  Licensed under the Apache License, Version 2.0 (the "License");          -->
<!--  you may not use this file except in compliance with the License.         -->
<!--  You may obtain a copy of the License at                                  -->
<!--                                                                           -->
<!--      http://www.apache.org/licenses/LICENSE-2.0                           -->
<!--                                                                           -->
<!--  Unless required by applicable law or agreed to in writing, software      -->
<!--  distributed under the License is distributed on an "AS IS" BASIS,        -->
<!--  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. -->
<!--  See the License for the specific language governing permissions and      -->
<!--  limitations under the License.                                           -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.ibm.watson.app.gallery</groupId>
    <artifactId>questions-with-classifier-ega</artifactId>
    <version>1.0.2-SNAPSHOT</version>
    <relativePath>../</relativePath>
  </parent>

  <artifactId>questions-with-classifier-ega-war</artifactId>
  <packaging>war</packaging>

  <properties>
    <swagger.codegen.outputDir>${project.build.directory}/generated-sources</swagger.codegen.outputDir>
    <swagger.codegen.source.outputDir>${swagger.codegen.outputDir}/src/main/java</swagger.codegen.source.outputDir>
  </properties>
  
  <!-- This repository no longer exists, but some plugins (e.g. exec-maven-plugin) reference it.
       This causes warning messages when Maven tries to look for plugin dependencies.  Since we're 
       not actually using any snapshot dependencies from this repository, it's safe to disable.
  -->
  <pluginRepositories>
    <pluginRepository>
      <id>codehaus-snapshots</id>
      <name>Codehaus Snapshots</name>
      <url>http://nexus.codehaus.org/snapshots/</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.3</version>
        <configuration>
          <attachClasses>true</attachClasses>
          <failOnMissingWebXml>false</failOnMissingWebXml>
          <warName>questions-with-classifier-ega-war</warName>
          <packagingExcludes>dev/,bower_components/, WEB-INF/classes/answers/</packagingExcludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.4.0</version>
        <executions>
          <execution>
            <id>generate-swagger-sources</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>java</goal>
            </goals>
            <configuration>
              <includePluginDependencies>true</includePluginDependencies>
              <mainClass>com.wordnik.swagger.codegen.Codegen</mainClass>
              <classpathScope>compile</classpathScope>
              <arguments>
                <argument>-i</argument>
                <argument>${project.basedir}/src/main/webapp/api/doc/swagger.json</argument>
                <argument>-l</argument>
                <argument>watson-app-jaxrs</argument>
                <argument>-o</argument>
                <argument>${swagger.codegen.outputDir}</argument>
              </arguments>
              <systemProperties>
                <systemProperty>
                  <key>com.ibm.watson.app.common.codegen.config</key>
                  <value>${project.basedir}/src/main/resources/watson-app-codegen.properties</value>
                </systemProperty>
              </systemProperties>
            </configuration>
          </execution>
          <execution>
            <id>generate-training-and-answers-json</id>
            <!-- Might make more sense in generate-resources, but we have to wait for the class to be compiled. -->
            <phase>prepare-package</phase>
            <goals>
              <goal>java</goal>
            </goals>
            <configuration>
              <mainClass>com.ibm.watson.app.qaclassifier.tools.GenerateTrainingAndPopulationData</mainClass>
              <arguments>
                <argument>--questionInput</argument>
                <argument>${project.basedir}/src/main/resources/questions.csv</argument>
                <argument>--questionOutput</argument>
                <argument>${project.basedir}/src/main/resources/training.json</argument>
                <argument>--answerInput</argument>
                <argument>${project.basedir}/src/main/resources/answers.csv</argument>
                <argument>--answerTextDirectory</argument>
                <argument>${project.basedir}/src/main/resources/answers</argument>
                <argument>--answerOutput</argument>
                <argument>${project.build.outputDirectory}/answers.json</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>${gallery.common.groupId}</groupId>
            <artifactId>framework-ega-codegen</artifactId>
            <version>${gallery.common.version}</version>
            <exclusions>
              <exclusion>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
              </exclusion>
            </exclusions>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>1.3.1</version>
        <executions>
          <execution>
            <id>enforce-swagger-generated-files-exist</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireFilesExist>
                  <message>The generated directory containing the classes from Swagger must be present</message>
                  <files>
                    <file>${swagger.codegen.source.outputDir}</file>
                  </files>
                </requireFilesExist>
              </rules>
              <fail>true</fail>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.7</version>
        <executions>
          <execution>
            <!-- swagger.json needs to be accessible at /api/doc/swagger.json when deployed, and also via the classpath. -->
            <id>copy-swagger-json</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.outputDirectory}</outputDirectory>
              <overwrite>true</overwrite>
              <resources>
                <resource>
                  <directory>src/main/webapp/api/doc</directory>
                  <includes>
                    <include>swagger.json</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <!-- move the deploy dir to target so that we can create the server deploy zip -->
            <id>copy-deploy-dir-to-target</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/deploy</outputDirectory>
              <overwrite>true</overwrite>
              <resources>
                <resource>
                  <directory>deploy</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>copy-war-to-deploy-dir</id>
            <phase>package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/deploy/wlp/usr/servers/defaultServer/apps</outputDirectory>
              <overwrite>true</overwrite>
              <resources>
                <resource>
                  <directory>${project.build.directory}</directory>
                  <includes>
                    <include>questions-with-classifier-ega-war.war</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.8</version>
        <executions>
          <execution>
            <id>create-server-deploy-zip</id>
            <phase>package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <zip destfile="${project.build.directory}/questions-with-classifier-ega-war.zip" basedir="${project.build.directory}/deploy"></zip>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.9.1</version>
        <executions>
          <execution>
            <id>add-swagger-generated-files-as-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${swagger.codegen.source.outputDir}</source>
              </sources>
            </configuration>
          </execution>
          <execution>
            <id>attach-zip-as-artifact</id>
            <phase>package</phase>
            <goals>
              <goal>attach-artifact</goal>
            </goals>
            <configuration>
              <artifacts>
                <artifact>
                  <file>${project.build.directory}/questions-with-classifier-ega-war.zip</file>
                  <type>zip</type>
                </artifact>
              </artifacts>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <version>0.0.23</version>

        <!-- add optional <configuration> here -->

        <executions>
          <execution>
            <id>install node and npm</id>
            <goals>
              <goal>install-node-and-npm</goal>
            </goals>

            <phase>generate-resources</phase>

            <configuration>
              <nodeVersion>v0.12.2</nodeVersion>
              <npmVersion>2.7.6</npmVersion>
            </configuration>
          </execution>

          <execution>
            <id>npm install</id>
            <goals>
              <goal>npm</goal>
            </goals>

            <phase>generate-resources</phase>

            <configuration>
              <!-- arguments here -->
              <arguments>install</arguments>
            </configuration>
          </execution>

          <execution>
            <id>bower install</id>
            <goals>
              <goal>bower</goal>
            </goals>

            <phase>generate-resources</phase>

            <configuration>
              <arguments>install</arguments>
              <!-- Incremental build control.  Bower doesn't operate on a source directory, 
                   so it should only run if gulpfile.js or bower.json change. -->
              <srcdir>no_srcdir_for_bower</srcdir>
              <triggerfiles>
                <triggerfile>bower.json</triggerfile>
                <triggerfile>gulpfile.js</triggerfile>
              </triggerfiles>
            </configuration>
          </execution>

          <execution>
            <id>gulp default build</id>
            <goals>
              <goal>gulp</goal>
            </goals>

            <phase>generate-resources</phase>

            <configuration>
              <!-- Incremental build control.  Run gulp when anything in the webapp/dev directory has been modified. -->
              <!--  gulp build is production minified code, where gulp or gulp build_debug is dev code  -->
              <arguments>build</arguments>
              <srcdir>src/main/webapp/dev</srcdir>
            </configuration>
          </execution>

          <execution>
            <id>javascript tests</id>
            <goals>
              <goal>karma</goal>
            </goals>

            <phase>test</phase>

            <configuration>
              <karmaConfPath>src/test/javascript/karma.conf.js</karmaConfPath>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <!-- This profile is only activated when running in Eclipse. It doesn't affect the build itself- it only stores Eclipse m2e settings. -->
      <id>only-in-eclipse-add-context-root</id>
      <activation>
        <property>
          <name>m2e.version</name>
        </property>
      </activation>
      <properties>
        <m2eclipse.wtp.contextRoot>/</m2eclipse.wtp.contextRoot>
      </properties>
    </profile>
  </profiles>

  <dependencies>
    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
      <version>3.0</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>commons-cli</groupId>
      <artifactId>commons-cli</artifactId>
      <version>1.2</version>
    </dependency>
    <dependency>
      <groupId>${gallery.common.groupId}</groupId>
      <artifactId>framework-ega-infra</artifactId>
      <version>${gallery.common.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>${gallery.common.groupId}</groupId>
      <artifactId>framework-ega-infra</artifactId>
      <version>${gallery.common.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.wordnik</groupId>
      <artifactId>swagger-jaxrs</artifactId>
      <version>1.5.1-M1</version>
      <exclusions>
        <exclusion>
          <groupId>com.google.guava</groupId>
          <artifactId>guava</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>javax</groupId>
      <artifactId>javaee-web-api</artifactId>
      <version>6.0</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-jdk14</artifactId>
      <version>1.7.7</version>
      <scope>compile</scope>
      <exclusions>
        <exclusion>
          <artifactId>slf4j-api</artifactId>
          <groupId>org.slf4j</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>2.8.9</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>commons-dbcp</groupId>
      <artifactId>commons-dbcp</artifactId>
      <version>1.4</version>
      <scope>compile</scope>
    </dependency>
  </dependencies>
</project>
